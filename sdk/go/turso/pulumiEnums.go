// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package turso

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DatabaseSeedType string

const (
	// Uses an database to seed the new database.
	DatabaseSeedTypeDatabase = DatabaseSeedType("database")
	// Uses a database dump to seed the new database.
	DatabaseSeedTypeDump = DatabaseSeedType("dump")
)

func (DatabaseSeedType) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseSeedType)(nil)).Elem()
}

func (e DatabaseSeedType) ToDatabaseSeedTypeOutput() DatabaseSeedTypeOutput {
	return pulumi.ToOutput(e).(DatabaseSeedTypeOutput)
}

func (e DatabaseSeedType) ToDatabaseSeedTypeOutputWithContext(ctx context.Context) DatabaseSeedTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseSeedTypeOutput)
}

func (e DatabaseSeedType) ToDatabaseSeedTypePtrOutput() DatabaseSeedTypePtrOutput {
	return e.ToDatabaseSeedTypePtrOutputWithContext(context.Background())
}

func (e DatabaseSeedType) ToDatabaseSeedTypePtrOutputWithContext(ctx context.Context) DatabaseSeedTypePtrOutput {
	return DatabaseSeedType(e).ToDatabaseSeedTypeOutputWithContext(ctx).ToDatabaseSeedTypePtrOutputWithContext(ctx)
}

func (e DatabaseSeedType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseSeedType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseSeedType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseSeedType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseSeedTypeOutput struct{ *pulumi.OutputState }

func (DatabaseSeedTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseSeedType)(nil)).Elem()
}

func (o DatabaseSeedTypeOutput) ToDatabaseSeedTypeOutput() DatabaseSeedTypeOutput {
	return o
}

func (o DatabaseSeedTypeOutput) ToDatabaseSeedTypeOutputWithContext(ctx context.Context) DatabaseSeedTypeOutput {
	return o
}

func (o DatabaseSeedTypeOutput) ToDatabaseSeedTypePtrOutput() DatabaseSeedTypePtrOutput {
	return o.ToDatabaseSeedTypePtrOutputWithContext(context.Background())
}

func (o DatabaseSeedTypeOutput) ToDatabaseSeedTypePtrOutputWithContext(ctx context.Context) DatabaseSeedTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseSeedType) *DatabaseSeedType {
		return &v
	}).(DatabaseSeedTypePtrOutput)
}

func (o DatabaseSeedTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseSeedTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseSeedType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseSeedTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseSeedTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseSeedType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseSeedTypePtrOutput struct{ *pulumi.OutputState }

func (DatabaseSeedTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseSeedType)(nil)).Elem()
}

func (o DatabaseSeedTypePtrOutput) ToDatabaseSeedTypePtrOutput() DatabaseSeedTypePtrOutput {
	return o
}

func (o DatabaseSeedTypePtrOutput) ToDatabaseSeedTypePtrOutputWithContext(ctx context.Context) DatabaseSeedTypePtrOutput {
	return o
}

func (o DatabaseSeedTypePtrOutput) Elem() DatabaseSeedTypeOutput {
	return o.ApplyT(func(v *DatabaseSeedType) DatabaseSeedType {
		if v != nil {
			return *v
		}
		var ret DatabaseSeedType
		return ret
	}).(DatabaseSeedTypeOutput)
}

func (o DatabaseSeedTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseSeedTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseSeedType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseSeedTypeInput is an input type that accepts values of the DatabaseSeedType enum
// A concrete instance of `DatabaseSeedTypeInput` can be one of the following:
//
//	DatabaseSeedTypeDatabase
//	DatabaseSeedTypeDump
type DatabaseSeedTypeInput interface {
	pulumi.Input

	ToDatabaseSeedTypeOutput() DatabaseSeedTypeOutput
	ToDatabaseSeedTypeOutputWithContext(context.Context) DatabaseSeedTypeOutput
}

var databaseSeedTypePtrType = reflect.TypeOf((**DatabaseSeedType)(nil)).Elem()

type DatabaseSeedTypePtrInput interface {
	pulumi.Input

	ToDatabaseSeedTypePtrOutput() DatabaseSeedTypePtrOutput
	ToDatabaseSeedTypePtrOutputWithContext(context.Context) DatabaseSeedTypePtrOutput
}

type databaseSeedTypePtr string

func DatabaseSeedTypePtr(v string) DatabaseSeedTypePtrInput {
	return (*databaseSeedTypePtr)(&v)
}

func (*databaseSeedTypePtr) ElementType() reflect.Type {
	return databaseSeedTypePtrType
}

func (in *databaseSeedTypePtr) ToDatabaseSeedTypePtrOutput() DatabaseSeedTypePtrOutput {
	return pulumi.ToOutput(in).(DatabaseSeedTypePtrOutput)
}

func (in *databaseSeedTypePtr) ToDatabaseSeedTypePtrOutputWithContext(ctx context.Context) DatabaseSeedTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseSeedTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseSeedTypeInput)(nil)).Elem(), DatabaseSeedType("database"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseSeedTypePtrInput)(nil)).Elem(), DatabaseSeedType("database"))
	pulumi.RegisterOutputType(DatabaseSeedTypeOutput{})
	pulumi.RegisterOutputType(DatabaseSeedTypePtrOutput{})
}
