// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package time

import (
	"context"
	"reflect"

	"github.com/celest-dev/pulumi-turso/sdk/go/turso/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type Time struct {
}

// TimeInput is an input type that accepts TimeArgs and TimeOutput values.
// You can construct a concrete instance of `TimeInput` via:
//
//	TimeArgs{...}
type TimeInput interface {
	pulumi.Input

	ToTimeOutput() TimeOutput
	ToTimeOutputWithContext(context.Context) TimeOutput
}

type TimeArgs struct {
}

func (TimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Time)(nil)).Elem()
}

func (i TimeArgs) ToTimeOutput() TimeOutput {
	return i.ToTimeOutputWithContext(context.Background())
}

func (i TimeArgs) ToTimeOutputWithContext(ctx context.Context) TimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeOutput)
}

func (i TimeArgs) ToTimePtrOutput() TimePtrOutput {
	return i.ToTimePtrOutputWithContext(context.Background())
}

func (i TimeArgs) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeOutput).ToTimePtrOutputWithContext(ctx)
}

// TimePtrInput is an input type that accepts TimeArgs, TimePtr and TimePtrOutput values.
// You can construct a concrete instance of `TimePtrInput` via:
//
//	        TimeArgs{...}
//
//	or:
//
//	        nil
type TimePtrInput interface {
	pulumi.Input

	ToTimePtrOutput() TimePtrOutput
	ToTimePtrOutputWithContext(context.Context) TimePtrOutput
}

type timePtrType TimeArgs

func TimePtr(v *TimeArgs) TimePtrInput {
	return (*timePtrType)(v)
}

func (*timePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Time)(nil)).Elem()
}

func (i *timePtrType) ToTimePtrOutput() TimePtrOutput {
	return i.ToTimePtrOutputWithContext(context.Background())
}

func (i *timePtrType) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimePtrOutput)
}

type TimeOutput struct{ *pulumi.OutputState }

func (TimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Time)(nil)).Elem()
}

func (o TimeOutput) ToTimeOutput() TimeOutput {
	return o
}

func (o TimeOutput) ToTimeOutputWithContext(ctx context.Context) TimeOutput {
	return o
}

func (o TimeOutput) ToTimePtrOutput() TimePtrOutput {
	return o.ToTimePtrOutputWithContext(context.Background())
}

func (o TimeOutput) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Time) *Time {
		return &v
	}).(TimePtrOutput)
}

type TimePtrOutput struct{ *pulumi.OutputState }

func (TimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Time)(nil)).Elem()
}

func (o TimePtrOutput) ToTimePtrOutput() TimePtrOutput {
	return o
}

func (o TimePtrOutput) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return o
}

func (o TimePtrOutput) Elem() TimeOutput {
	return o.ApplyT(func(v *Time) Time {
		if v != nil {
			return *v
		}
		var ret Time
		return ret
	}).(TimeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TimeInput)(nil)).Elem(), TimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimePtrInput)(nil)).Elem(), TimeArgs{})
	pulumi.RegisterOutputType(TimeOutput{})
	pulumi.RegisterOutputType(TimePtrOutput{})
}
