// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package turso

import (
	"context"
	"reflect"

	"github.com/celest-dev/pulumi-turso/sdk/go/turso/internal"
	"github.com/celest-dev/pulumi-turso/sdk/go/turso/time"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DatabaseInstanceState struct {
	Hostname string `pulumi:"hostname"`
	Name     string `pulumi:"name"`
	Region   string `pulumi:"region"`
	Type     string `pulumi:"type"`
	Uuid     string `pulumi:"uuid"`
}

type DatabaseInstanceStateOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceState)(nil)).Elem()
}

func (o DatabaseInstanceStateOutput) ToDatabaseInstanceStateOutput() DatabaseInstanceStateOutput {
	return o
}

func (o DatabaseInstanceStateOutput) ToDatabaseInstanceStateOutputWithContext(ctx context.Context) DatabaseInstanceStateOutput {
	return o
}

func (o DatabaseInstanceStateOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceState) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o DatabaseInstanceStateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceState) string { return v.Name }).(pulumi.StringOutput)
}

func (o DatabaseInstanceStateOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceState) string { return v.Region }).(pulumi.StringOutput)
}

func (o DatabaseInstanceStateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceState) string { return v.Type }).(pulumi.StringOutput)
}

func (o DatabaseInstanceStateOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceState) string { return v.Uuid }).(pulumi.StringOutput)
}

type DatabaseInstanceStateMapOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceStateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseInstanceState)(nil)).Elem()
}

func (o DatabaseInstanceStateMapOutput) ToDatabaseInstanceStateMapOutput() DatabaseInstanceStateMapOutput {
	return o
}

func (o DatabaseInstanceStateMapOutput) ToDatabaseInstanceStateMapOutputWithContext(ctx context.Context) DatabaseInstanceStateMapOutput {
	return o
}

func (o DatabaseInstanceStateMapOutput) MapIndex(k pulumi.StringInput) DatabaseInstanceStateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseInstanceState {
		return vs[0].(map[string]DatabaseInstanceState)[vs[1].(string)]
	}).(DatabaseInstanceStateOutput)
}

type DatabaseSeedArgs struct {
	Name      *string          `pulumi:"name"`
	Timestamp *time.Time       `pulumi:"timestamp"`
	Type      DatabaseSeedType `pulumi:"type"`
	Url       *string          `pulumi:"url"`
}

// DatabaseSeedArgsInput is an input type that accepts DatabaseSeedArgsArgs and DatabaseSeedArgsOutput values.
// You can construct a concrete instance of `DatabaseSeedArgsInput` via:
//
//	DatabaseSeedArgsArgs{...}
type DatabaseSeedArgsInput interface {
	pulumi.Input

	ToDatabaseSeedArgsOutput() DatabaseSeedArgsOutput
	ToDatabaseSeedArgsOutputWithContext(context.Context) DatabaseSeedArgsOutput
}

type DatabaseSeedArgsArgs struct {
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Timestamp time.TimePtrInput     `pulumi:"timestamp"`
	Type      DatabaseSeedTypeInput `pulumi:"type"`
	Url       pulumi.StringPtrInput `pulumi:"url"`
}

func (DatabaseSeedArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseSeedArgs)(nil)).Elem()
}

func (i DatabaseSeedArgsArgs) ToDatabaseSeedArgsOutput() DatabaseSeedArgsOutput {
	return i.ToDatabaseSeedArgsOutputWithContext(context.Background())
}

func (i DatabaseSeedArgsArgs) ToDatabaseSeedArgsOutputWithContext(ctx context.Context) DatabaseSeedArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseSeedArgsOutput)
}

func (i DatabaseSeedArgsArgs) ToDatabaseSeedArgsPtrOutput() DatabaseSeedArgsPtrOutput {
	return i.ToDatabaseSeedArgsPtrOutputWithContext(context.Background())
}

func (i DatabaseSeedArgsArgs) ToDatabaseSeedArgsPtrOutputWithContext(ctx context.Context) DatabaseSeedArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseSeedArgsOutput).ToDatabaseSeedArgsPtrOutputWithContext(ctx)
}

// DatabaseSeedArgsPtrInput is an input type that accepts DatabaseSeedArgsArgs, DatabaseSeedArgsPtr and DatabaseSeedArgsPtrOutput values.
// You can construct a concrete instance of `DatabaseSeedArgsPtrInput` via:
//
//	        DatabaseSeedArgsArgs{...}
//
//	or:
//
//	        nil
type DatabaseSeedArgsPtrInput interface {
	pulumi.Input

	ToDatabaseSeedArgsPtrOutput() DatabaseSeedArgsPtrOutput
	ToDatabaseSeedArgsPtrOutputWithContext(context.Context) DatabaseSeedArgsPtrOutput
}

type databaseSeedArgsPtrType DatabaseSeedArgsArgs

func DatabaseSeedArgsPtr(v *DatabaseSeedArgsArgs) DatabaseSeedArgsPtrInput {
	return (*databaseSeedArgsPtrType)(v)
}

func (*databaseSeedArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseSeedArgs)(nil)).Elem()
}

func (i *databaseSeedArgsPtrType) ToDatabaseSeedArgsPtrOutput() DatabaseSeedArgsPtrOutput {
	return i.ToDatabaseSeedArgsPtrOutputWithContext(context.Background())
}

func (i *databaseSeedArgsPtrType) ToDatabaseSeedArgsPtrOutputWithContext(ctx context.Context) DatabaseSeedArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseSeedArgsPtrOutput)
}

type DatabaseSeedArgsOutput struct{ *pulumi.OutputState }

func (DatabaseSeedArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseSeedArgs)(nil)).Elem()
}

func (o DatabaseSeedArgsOutput) ToDatabaseSeedArgsOutput() DatabaseSeedArgsOutput {
	return o
}

func (o DatabaseSeedArgsOutput) ToDatabaseSeedArgsOutputWithContext(ctx context.Context) DatabaseSeedArgsOutput {
	return o
}

func (o DatabaseSeedArgsOutput) ToDatabaseSeedArgsPtrOutput() DatabaseSeedArgsPtrOutput {
	return o.ToDatabaseSeedArgsPtrOutputWithContext(context.Background())
}

func (o DatabaseSeedArgsOutput) ToDatabaseSeedArgsPtrOutputWithContext(ctx context.Context) DatabaseSeedArgsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseSeedArgs) *DatabaseSeedArgs {
		return &v
	}).(DatabaseSeedArgsPtrOutput)
}

func (o DatabaseSeedArgsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseSeedArgs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DatabaseSeedArgsOutput) Timestamp() time.TimePtrOutput {
	return o.ApplyT(func(v DatabaseSeedArgs) *time.Time { return v.Timestamp }).(time.TimePtrOutput)
}

func (o DatabaseSeedArgsOutput) Type() DatabaseSeedTypeOutput {
	return o.ApplyT(func(v DatabaseSeedArgs) DatabaseSeedType { return v.Type }).(DatabaseSeedTypeOutput)
}

func (o DatabaseSeedArgsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseSeedArgs) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type DatabaseSeedArgsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseSeedArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseSeedArgs)(nil)).Elem()
}

func (o DatabaseSeedArgsPtrOutput) ToDatabaseSeedArgsPtrOutput() DatabaseSeedArgsPtrOutput {
	return o
}

func (o DatabaseSeedArgsPtrOutput) ToDatabaseSeedArgsPtrOutputWithContext(ctx context.Context) DatabaseSeedArgsPtrOutput {
	return o
}

func (o DatabaseSeedArgsPtrOutput) Elem() DatabaseSeedArgsOutput {
	return o.ApplyT(func(v *DatabaseSeedArgs) DatabaseSeedArgs {
		if v != nil {
			return *v
		}
		var ret DatabaseSeedArgs
		return ret
	}).(DatabaseSeedArgsOutput)
}

func (o DatabaseSeedArgsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseSeedArgs) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseSeedArgsPtrOutput) Timestamp() time.TimePtrOutput {
	return o.ApplyT(func(v *DatabaseSeedArgs) *time.Time {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(time.TimePtrOutput)
}

func (o DatabaseSeedArgsPtrOutput) Type() DatabaseSeedTypePtrOutput {
	return o.ApplyT(func(v *DatabaseSeedArgs) *DatabaseSeedType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(DatabaseSeedTypePtrOutput)
}

func (o DatabaseSeedArgsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseSeedArgs) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseSeedArgsInput)(nil)).Elem(), DatabaseSeedArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseSeedArgsPtrInput)(nil)).Elem(), DatabaseSeedArgsArgs{})
	pulumi.RegisterOutputType(DatabaseInstanceStateOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceStateMapOutput{})
	pulumi.RegisterOutputType(DatabaseSeedArgsOutput{})
	pulumi.RegisterOutputType(DatabaseSeedArgsPtrOutput{})
}
